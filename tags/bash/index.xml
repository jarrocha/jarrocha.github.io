<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bash on Innercoder.dev</title>
    <link>https://jarrocha.github.io/tags/bash/</link>
    <description>Recent content in Bash on Innercoder.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 Apr 2016 16:25:31 -0700</lastBuildDate>
    
	<atom:link href="https://jarrocha.github.io/tags/bash/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Installing and Configuring OpenvSwitch With QEMU-KVM</title>
      <link>https://jarrocha.github.io/post/2018-11-18-ovs-kvm/</link>
      <pubDate>Mon, 18 Apr 2016 16:25:31 -0700</pubDate>
      
      <guid>https://jarrocha.github.io/post/2018-11-18-ovs-kvm/</guid>
      <description>&lt;p&gt;The maturity reached by Software Defined Networking (SDN) in the lastest years
is a very important one. We are at a point where we could see this architecture
/framework become a standard. And what makes it so amazing is its fundamental
idea of openness, just like Linux did it around 20 years ago. OpenvSwitch (OVS)
is a tool used to create virtual bridges which can then connect virtual or
physical hosts. It implements both traditional L2 switching protocols or
Openflow.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Automating Quagga With QEMU-KVM: Part 1</title>
      <link>https://jarrocha.github.io/post/2018-11-18-quagga-kvm-i/</link>
      <pubDate>Wed, 23 Mar 2016 16:06:40 -0700</pubDate>
      
      <guid>https://jarrocha.github.io/post/2018-11-18-quagga-kvm-i/</guid>
      <description>&lt;p&gt;Some days ago I needed a proof of concept for some routing configuration using
Linux that was stuck in my head for days already. So I needed a way to bring up
some Linux boxes to quickly to check this. The &lt;a href=&#34;https://opennetlinux.org/docs/routingtutorial&#34;&gt;ONL website&lt;/a&gt; proved very
useful, but I needed to use CentOS. So I came up with a script based on the
mentioned tutorial that brings up QEMU-KVM images with Quagga already installed
and configured.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>