<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OpenCV on Innercoder.dev</title>
    <link>https://jarrocha.github.io/tags/opencv/</link>
    <description>Recent content in OpenCV on Innercoder.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Aug 2021 09:25:34 -0500</lastBuildDate>
    
	<atom:link href="https://jarrocha.github.io/tags/opencv/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Advanced Road Lane Detection with OpenCV and Python</title>
      <link>https://jarrocha.github.io/post/adv_lane_finding/</link>
      <pubDate>Tue, 10 Aug 2021 09:25:34 -0500</pubDate>
      
      <guid>https://jarrocha.github.io/post/adv_lane_finding/</guid>
      <description>Introduction  This project consisted on the following topics. Some of the code used is similar to the previous one.
 Compute the camera calibration matrix and distortion coefficients given a set of chessboard images. Apply a distortion correction to raw images. Use color transforms, gradients, etc., to create a thresholded binary image. Apply a perspective transform to rectify binary image (&amp;ldquo;birds-eye view&amp;rdquo;). Detect lane pixels and fit to find the lane boundary.</description>
    </item>
    
    <item>
      <title>Road Lane Detection with OpenCV and Python</title>
      <link>https://jarrocha.github.io/post/lane_finding/</link>
      <pubDate>Wed, 14 Jul 2021 06:45:31 -0500</pubDate>
      
      <guid>https://jarrocha.github.io/post/lane_finding/</guid>
      <description>Introduction  This was my first attempt at working at this project based on the Udacity course. I found it an amazing experience to learn about this because once you get through all the math and see the results, you get a very good feeling of accomplishment, understanding, and humility on the problem to be solved.
Development  The code below is done twice, once for building single images and then the refactoring of the code to deal with videos.</description>
    </item>
    
  </channel>
</rss>