<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TCP/IP on Innercoder.dev</title>
    <link>https://jarrocha.github.io/tags/tcp/ip/</link>
    <description>Recent content in TCP/IP on Innercoder.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 11 Mar 2017 16:47:01 -0700</lastBuildDate>
    
	<atom:link href="https://jarrocha.github.io/tags/tcp/ip/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Coding Your Own Network Sniffer</title>
      <link>https://jarrocha.github.io/post/2018-11-18-network-sniffer/</link>
      <pubDate>Sat, 11 Mar 2017 16:47:01 -0700</pubDate>
      
      <guid>https://jarrocha.github.io/post/2018-11-18-network-sniffer/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;This a small project that came to mind after reading some reference
material while stuyding HTTP. It basically consists of using raw sockets to
make the kernel handle L2 data/frames to the user application. From there
anything is possible, a ping server, a traceroute appication, IP spoofing,
man-in-the-middle attacks, the sky is the limits.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Installing and Configuring OpenvSwitch With QEMU-KVM</title>
      <link>https://jarrocha.github.io/post/2018-11-18-ovs-kvm/</link>
      <pubDate>Mon, 18 Apr 2016 16:25:31 -0700</pubDate>
      
      <guid>https://jarrocha.github.io/post/2018-11-18-ovs-kvm/</guid>
      <description>&lt;p&gt;The maturity reached by Software Defined Networking (SDN) in the lastest years
is a very important one. We are at a point where we could see this architecture
/framework become a standard. And what makes it so amazing is its fundamental
idea of openness, just like Linux did it around 20 years ago. OpenvSwitch (OVS)
is a tool used to create virtual bridges which can then connect virtual or
physical hosts. It implements both traditional L2 switching protocols or
Openflow.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>