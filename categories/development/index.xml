<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on Innercoder.dev</title>
    <link>https://jarrocha.github.io/categories/development/</link>
    <description>Recent content in Development on Innercoder.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Nov 2018 10:47:50 -0400</lastBuildDate>
    
	<atom:link href="https://jarrocha.github.io/categories/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TCP Sockets Server</title>
      <link>https://jarrocha.github.io/post/tcp-server/</link>
      <pubDate>Sun, 18 Nov 2018 10:47:50 -0400</pubDate>
      
      <guid>https://jarrocha.github.io/post/tcp-server/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;This post serves as a explanation of the basics of a TCP socket server, which
serves as the base to a future post explaining the basics of a web server.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; the complete code of an older version is fully posted in the end.
Check my github repo for an updated version. &lt;a href=&#34;https://github.com/jarrocha/psockets/tree/master/tcp_server&#34;&gt;Link&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Capturing Websites With Sockets and HTTP</title>
      <link>https://jarrocha.github.io/post/2018-11-18-sockets-http/</link>
      <pubDate>Fri, 02 Sep 2016 11:57:56 -0700</pubDate>
      
      <guid>https://jarrocha.github.io/post/2018-11-18-sockets-http/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;This post shows a program that captures web pages&amp;rsquo;s index.html with sockets.
To do this, it creates a TCP client socket, connects to a web server and takes
all the data to stdout. The input supports IPv4, IPv6, and hostname resolution.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://jarrocha.github.io/post/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jarrocha.github.io/post/goisforlovers/</guid>
      <description>&lt;p&gt;Hugo uses the excellent &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; &lt;a href=&#34;https://golang.org/pkg/html/template/&#34;&gt;html/template&lt;/a&gt; library for
its template engine. It is an extremely lightweight engine that provides a very
small amount of logic. In our experience that it is just the right amount of
logic to be able to create a good static website. If you have used other
template systems from different languages or frameworks you will find a lot of
similarities in Go templates.&lt;/p&gt;

&lt;p&gt;This document is a brief primer on using Go templates. The &lt;a href=&#34;https://golang.org/pkg/html/template/&#34;&gt;Go docs&lt;/a&gt;
provide more details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://jarrocha.github.io/post/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jarrocha.github.io/post/hugoisforlovers/</guid>
      <description>&lt;p&gt;First, go to &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;Hugo releases&lt;/a&gt; and download the
appropriate version for your OS and architecture.&lt;/p&gt;

&lt;p&gt;Save it somewhere specific as we will be using it in the next step.&lt;/p&gt;

&lt;p&gt;More complete instructions are available at &lt;a href=&#34;https://gohugo.io/getting-started/installing/&#34;&gt;Install Hugo&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>